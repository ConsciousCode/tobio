#!/usr/bin/env python3

# Connect to websocket server and send/receive messages.
HOST = "localhost:8000"
ENDPOINT = "/chat"

import asyncio
import websockets
import aioconsole

async def handle_keepalive(ws):
    while True:
        await ws.send("")
        await asyncio.sleep(5)

async def handle_input(ws, ready: asyncio.Event):
    while True:
        await ready.wait()
        prompt = await aioconsole.ainput("User: ")
        if prompt.startswith("/") and not prompt.startswith("//"):
            cmd, *args = prompt[1:].split(" ", 1)
            match cmd:
                case "q"|"quit":
                    await ws.send("/q")
                    raise asyncio.CancelledError("quit")
        
        await ws.send(prompt)
        ready.clear()

async def handle_output(ws, ready: asyncio.Event):
    while True:
        async for delta in ws:
            # Keepalive
            if delta == "":
                continue
            
            # Halt
            if delta == "[DONE]":
                break
            
            # Stream
            print(delta, end="", flush=True)
        
        ready.set()
        print()

async def main():
    async with websockets.connect(f"ws://{HOST}{ENDPOINT}") as ws:
        try:
            async with asyncio.TaskGroup() as tg:
                ready = asyncio.Event()
                ready.set()
                
                await asyncio.gather(
                    tg.create_task(handle_input(ws, ready)),
                    tg.create_task(handle_output(ws, ready)),
                    tg.create_task(handle_keepalive(ws))
                )
        except asyncio.CancelledError:
            pass

if __name__ == "__main__":
    asyncio.run(main())
    print(flush=True)